Brady with Parker:
The first paired programming session I shared with Parker. We accomplished a few tasks and created an action map going forward. We shared a challenge that we reflected on for sessions moving forward. Firstly, the session was more productive than a solo coding session. We were able to exchange ideas, correct syntax and steer each other from distraction of other elements within the code. Secondly, code quality was higher. We kept adjusting with conformance to the style guide much easier as a group instead of treating the style guide as an afterthought. Things I had forgotten in are our chosen style guide were pointed out by Parker and vice-versa. This allowed us to be more honest in conformance to the style guide going forward. Also, programming out loud and bouncing ideas off one another solved a lot of errors before they had arisen, allowing for distraction free programming.

In our session we created method stubs for the RobotSocketLibrary, created a mock JSON file for testing, researched JSON integration, clarified gang and team definitions as described in the document and changed Robot id from INT to STRING to adhere to JSON "name." We identified a path going forward to create tests of RobotSocketLibrary and to start expressing the method stubs we had started. Also, creating a mock JSON file allowed us to start implementing JSON tests in the RobotSocketLibrary. A challenge that was noted in our session was a lack of goal setting for the session. We started juggling a few ideas, worked a little bit on each idea. We feel our efficiency would have increased if we had clearer end-goals in mind for the session.



Brady With Dylan:
The second paired programming session was shared with Dylan. We accomplished one very large task, identified future objectives and changed a few elements of previously written code to conform more closely to the original UML diagram as described in the Design Document. We created NpcController, and made changes to the Robot and RobotSocketLibrary classes. We also identified work needing to be done in the Team class and set TODO's within the code to assist team members with what elements need to be finished or changed in the near future.

Using the knowledge gained from my previous paired programming sessions, we first started the session with setting a specific end goal to work towards before anything had been done. We considered working on the Views in our system or the NpcController. Ultimately settling on the NpcController. This was doubly nice since Dylan had put a lot of individual time into the ForthInterpretter, which our NpcController works with very closely. Dylan was able to explain and share knowledge of the Forth Interpreter to me, helping me understand a component of the system I was less familiar with. This allows me to be more useful in other ForthInterpretter interactions within the system going forward and gave me a greater understanding of our system. We also made plenty of changes to previously programmed work in Robot and RobotSocketLibrary classes to adhere closer to the original design document which also unified the ForthInterpretter with the rest of the system.